#!/bin/sh

## post-install.txt used with raspbian-ua-netinst
# after writing a netinst image to an sdcard (/dev/mmcblk0 in this example),
# download, edit, and copy to /boot folder of the netinst boot partition:
#   $ wget https://raw.githubusercontent.com/edlins/picontrol-netinst/master/post-install.txt
#   $ vi post-install.txt (to customize EXTRAS)
#   $ sudo mount /dev/mmcblk0p1 /mnt (or other mount point)
#   $ cp post-install.txt /mnt (for raspbian-ua-netinst) OR
#   $ cp post-install.txt /mnt/raspberrypi-ua-netinst/config (for raspberrypi-ua-netinst)
#   $ mv /mnt/config-reinstall.txt /mnt/config.txt (if reinstalling raspbian-ua-netinst) OR
#   $ mv /mnt/raspberrypi-ua-netinst/reinstall/config.txt /mnt/config.txt (if reinstalling raspberrypi-ua-netinst *BROKEN!*)
#   $ sudo umount /dev/mmcblk0p1
# then remove the sdcard, insert into an unpowered network-connected pi, power up, wait 30 minutes, play!

echo "Starting post-install.txt"

# extra scripts to execute for additional installs
# they will be downloaded and executed via `chroot /rootfs netinst.sh` by netinst
# add or remove EXTRAS as needed
EXTRAS=""
EXTRAS="$EXTRAS http://raw.githubusercontent.com/edlins/pibuttonpower/master/netinst.sh"
EXTRAS="$EXTRAS http://raw.githubusercontent.com/edlins/libPCA9685/develop/netinst.sh"
EXTRAS="$EXTRAS http://raw.githubusercontent.com/edlins/libPCA9685/develop/examples/olaclient/netinst.sh"
EXTRAS="$EXTRAS http://raw.githubusercontent.com/edlins/libPCA9685/develop/examples/audio/netinst.sh"
EXTRAS="$EXTRAS http://raw.githubusercontent.com/edlins/picontrol-netinst/master/wifi-netinst.sh"

# jackd runs debconf to prompt the user for some bullshit.  turn that off
echo ""
echo "= Disabling debconf prompting"
export DEBIAN_FRONTEND=noninteractive

echo ""
echo "= Localizing to UTF-8"
# set the locale
echo "en_US.UTF-8 UTF-8" > /rootfs/etc/locale.gen
chroot /rootfs /usr/sbin/locale-gen

# set the timezone.  note that how this is done has changed in stretch
echo ""
echo "= Setting timezone to US/Mountain"
chroot /rootfs ln -fs /usr/share/zoneinfo/US/Mountain /etc/localtime
chroot /rootfs dpkg-reconfigure --frontend noninteractive tzdata

# create and activate swap
echo ""
echo "= Creating swap"
chroot /rootfs dd if=/dev/zero of=/swap bs=1M count=512 && mkswap /rootfs/swap
echo "/swap none swap sw 0 0" >> /rootfs/etc/fstab

echo ""
echo "=== Checking sources.list"
if ! grep raspbian.org /rootfs/etc/apt/sources.list
then
  echo "= Adding raspbian.org to sources"
  echo "deb http://archive.raspbian.org/raspbian stretch main contrib non-free" >> /rootfs/etc/apt/sources.list
  chroot /rootfs apt-get update
else
  echo "raspbian.org already in sources"
fi


echo ""
echo "=== Adding packages ==="
# better memory management
echo ""
echo "= Adding raspi-copies-and-fills"
chroot /rootfs /usr/bin/apt-get -y --no-install-recommends install raspi-copies-and-fills

# improved rng
echo ""
echo "= Adding rng"
chroot /rootfs /usr/bin/apt-get -y --no-install-recommends install rng-tools
echo "bcm2708-rng" >> /rootfs/etc/modules

# install git
echo ""
echo "= Adding git-core"
chroot /rootfs /usr/bin/apt-get -y --no-install-recommends install git-core

echo ""
echo "= Adding extras"
# download and execute the EXTRA scripts
mkdir /rootfs/tmp/extras
for EXTRA in $EXTRAS; do
  chroot /rootfs /bin/sh << EOFextras
    cd /tmp/extras
    echo "/usr/bin/wget --no-check-certificate --content-disposition $EXTRA"
    /usr/bin/wget --no-check-certificate --content-disposition "$EXTRA"
EOFextras
done

chroot /rootfs find /tmp/extras -type f -exec sh {} \;

echo "Finished!"
